<launch>
  <arg name="launch_prefix" default="" /> <!-- set to value="gdbserver localhost:10000" for remote debugging -->
  <arg name="node_namespace" default="apriltag_ros_continuous_node" />
  <arg name="camera_name" default="/usb_cam" />
  <arg name="camera_frame" default="usb_cam" />
  <arg name="image_topic" default="image_rect" />
  <arg name="debug" default="false"/>
  <arg name="device" default="/dev/video0" />

  <!-- Activate AprilTag detection mode -->
  <!-- Set parameters -->
  <rosparam command="load" file="$(find apriltag_ros)/config/settings.yaml" ns="$(arg node_namespace)" />
  <rosparam command="load" file="$(find apriltag_ros)/config/tags.yaml" ns="$(arg node_namespace)" />
  
  <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="$(arg node_namespace)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" >
    <!-- Remap topics from those used in code to those on the ROS network -->
    <remap from="image_rect" to="$(arg camera_name)/$(arg image_topic)" />
    <remap from="camera_info" to="$(arg camera_name)/camera_info" />

    <param name="camera_frame" type="str" value="$(arg camera_frame)" />
    <param name="publish_tag_detections_image" type="bool" value="false" />      <!-- default: false -->
  </node>

  <!-- Activate Image Processing Node -->
  <!-- refer to: http://wiki.ros.org/image_proc  -->
  <node ns="usb_cam" pkg="image_proc" type="image_proc" name="image_proc"/>  
  <!-- Activate Camera Driver Node -->
  <include file="$(find usb_cam)/launch/camera.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="device" value="$(arg device)" />
  </include>

  <!-- show image for debug -->
  <group  if="$(arg debug)">
    <node pkg="image_view" type="image_view" name="image_rect" if="$(arg debug)">
		<remap from="image" to="/usb_cam/image_rect_color" />
		<param name="autosize" type="bool" value="true" />
	</node>
  </group>

<!--
 <node pkg="sc_localization" type="odom_update_node" name="odom_update_node" respawn="true" output="screen"/>
-->

<!-- Set static location of base to cam -->

<node pkg="tf2_ros" type="static_transform_publisher" name="base_cam" args="0.19 0 0.6 -1.5707 0 -2.3562 base cam" />

<!-- Set static location of tags -->

<node pkg="tf2_ros" type="static_transform_publisher" name="map_tag_7" args="0 0 0 0 0 0 map tag_7" />
<node pkg="tf2_ros" type="static_transform_publisher" name="map_tag_6" args="-0.4 0 0 0 0 0 map tag_6" />
<node pkg="tf2_ros" type="static_transform_publisher" name="map_tag_8" args="0.4 0 0 0 0 0 map tag_8" />
<node pkg="tf2_ros" type="static_transform_publisher" name="map_tag_9" args="-0.4 0.4 0 0 0 0 map tag_9" />
<node pkg="tf2_ros" type="static_transform_publisher" name="map_tag_15" args="0 0.4 0 0 0 0 map tag_15" />
<node pkg="tf2_ros" type="static_transform_publisher" name="map_tag_18" args="0.4 0.4 0 0 0 0 map tag_18" />
<node pkg="tf2_ros" type="static_transform_publisher" name="map_tag_1" args="-0.4 -0.4 0 0 0 0 map tag_1" />
<node pkg="tf2_ros" type="static_transform_publisher" name="map_tag_12" args="0 -0.4 0 0 0 0 map tag_12" />
<node pkg="tf2_ros" type="static_transform_publisher" name="map_tag_19" args="0.4 -0.4 0 0 0 0 map tag_19" />

</launch>
