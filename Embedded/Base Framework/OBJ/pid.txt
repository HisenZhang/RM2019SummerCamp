; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\pid.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\pid.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\CORE -I.\USER -I.\HALLIB\STM32F4xx_HAL_Driver\Inc -I.\SYSTEM -I.\Hardware -I.\App -I.\DSP_LIB\Include -I.\FATFS -I.\FreeRTOS -I.\DMP -I.\DMP\eMPL -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=526 -DSTM32F427xx -DSTM32F4 -DUSE_HAL_DRIVER -DSTM32F427xx -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=.\obj\pid.crf App\PID.c]
                          THUMB

                          AREA ||i.PID_Calculate||, CODE, READONLY, ALIGN=2

                  PID_Calculate PROC
;;;20     }
;;;21     void PID_Calculate(void* pvParameters)
000000  b51c              PUSH     {r2-r4,lr}
;;;22     {
;;;23     	while(1)
000002  e05c              B        |L1.190|
                  |L1.4|
;;;24     	{
;;;25     		Renew_PID();
000004  f7fffffe          BL       Renew_PID
;;;26     		taskENTER_CRITICAL();
000008  f7fffffe          BL       vPortEnterCritical
;;;27     		set_moto_current(&hcan1,PID_Get_Result(&PID5),PID_Get_Result(&PID6),PID_Get_Result(&PID7),PID_Get_Result(&PID8),ID_5_8);  //ID为5~8的电机
00000c  482c              LDR      r0,|L1.192|
00000e  f7fffffe          BL       PID_Get_Result
000012  eebd0ac0          VCVT.S32.F32 s0,s0
000016  ee100a10          VMOV     r0,s0
00001a  b204              SXTH     r4,r0
00001c  4829              LDR      r0,|L1.196|
00001e  f7fffffe          BL       PID_Get_Result
000022  eebd0ac0          VCVT.S32.F32 s0,s0
000026  ee100a10          VMOV     r0,s0
00002a  b205              SXTH     r5,r0
00002c  4826              LDR      r0,|L1.200|
00002e  f7fffffe          BL       PID_Get_Result
000032  eebd0ac0          VCVT.S32.F32 s0,s0
000036  ee100a10          VMOV     r0,s0
00003a  b206              SXTH     r6,r0
00003c  4823              LDR      r0,|L1.204|
00003e  f7fffffe          BL       PID_Get_Result
000042  eebd0ac0          VCVT.S32.F32 s0,s0
000046  ee100a10          VMOV     r0,s0
00004a  b207              SXTH     r7,r0
00004c  f24010ff          MOV      r0,#0x1ff
000050  462b              MOV      r3,r5
000052  4632              MOV      r2,r6
000054  4639              MOV      r1,r7
000056  e9cd4000          STRD     r4,r0,[sp,#0]
00005a  481d              LDR      r0,|L1.208|
00005c  f7fffffe          BL       set_moto_current
;;;28     		set_moto_current(&hcan1,PID_Get_Result(&PID1),PID_Get_Result(&PID2),PID_Get_Result(&PID3),PID_Get_Result(&PID4),ID_1_4);  //ID为1~4的电机
000060  481c              LDR      r0,|L1.212|
000062  f7fffffe          BL       PID_Get_Result
000066  eebd0ac0          VCVT.S32.F32 s0,s0
00006a  ee100a10          VMOV     r0,s0
00006e  b204              SXTH     r4,r0
000070  4819              LDR      r0,|L1.216|
000072  f7fffffe          BL       PID_Get_Result
000076  eebd0ac0          VCVT.S32.F32 s0,s0
00007a  ee100a10          VMOV     r0,s0
00007e  b205              SXTH     r5,r0
000080  4816              LDR      r0,|L1.220|
000082  f7fffffe          BL       PID_Get_Result
000086  eebd0ac0          VCVT.S32.F32 s0,s0
00008a  ee100a10          VMOV     r0,s0
00008e  b206              SXTH     r6,r0
000090  4813              LDR      r0,|L1.224|
000092  f7fffffe          BL       PID_Get_Result
000096  eebd0ac0          VCVT.S32.F32 s0,s0
00009a  ee100a10          VMOV     r0,s0
00009e  b207              SXTH     r7,r0
0000a0  f44f7000          MOV      r0,#0x200
0000a4  462b              MOV      r3,r5
0000a6  4632              MOV      r2,r6
0000a8  4639              MOV      r1,r7
0000aa  e9cd4000          STRD     r4,r0,[sp,#0]
0000ae  4808              LDR      r0,|L1.208|
0000b0  f7fffffe          BL       set_moto_current
;;;29     		taskEXIT_CRITICAL();
0000b4  f7fffffe          BL       vPortExitCritical
;;;30     		vTaskDelay(PID_Time);
0000b8  2005              MOVS     r0,#5
0000ba  f7fffffe          BL       vTaskDelay
                  |L1.190|
0000be  e7a1              B        |L1.4|
;;;31     	}
;;;32     }
                          ENDP

                  |L1.192|
                          DCD      PID8
                  |L1.196|
                          DCD      PID7
                  |L1.200|
                          DCD      PID6
                  |L1.204|
                          DCD      PID5
                  |L1.208|
                          DCD      hcan1
                  |L1.212|
                          DCD      PID4
                  |L1.216|
                          DCD      PID3
                  |L1.220|
                          DCD      PID2
                  |L1.224|
                          DCD      PID1

                          AREA ||i.PID_Get_Result||, CODE, READONLY, ALIGN=1

                  PID_Get_Result PROC
;;;9      PID_Structure PID8;
;;;10     float PID_Get_Result(PID_Structure* PID_Handler)
000000  b510              PUSH     {r4,lr}
;;;11     {
000002  ed2d8b08          VPUSH    {d8-d11}
000006  4604              MOV      r4,r0
;;;12     			float Error=(PID_Handler->User-PID_Handler->Collect[0]);    //计算误差
000008  ed940a07          VLDR     s0,[r4,#0x1c]
00000c  edd40a04          VLDR     s1,[r4,#0x10]
000010  ee300a60          VSUB.F32 s0,s0,s1
000014  eeb08a40          VMOV.F32 s16,s0
;;;13     			if(fabs(Error) < PID_Handler->I_Limit)
000018  ed940a09          VLDR     s0,[r4,#0x24]
00001c  ee101a10          VMOV     r1,s0
000020  4608              MOV      r0,r1
000022  f7fffffe          BL       __aeabi_f2d
000026  ec410b19          VMOV     d9,r0,r1
00002a  ee180a10          VMOV     r0,s16
00002e  f7fffffe          BL       __aeabi_f2d
000032  ec410b1b          VMOV     d11,r0,r1
000036  eeb00a4b          VMOV.F32 s0,s22
00003a  eef00a6b          VMOV.F32 s1,s23
00003e  f7fffffe          BL       __hardfp_fabs
000042  eeb0aa40          VMOV.F32 s20,s0
000046  eef0aa60          VMOV.F32 s21,s1
00004a  ec532b19          VMOV     r2,r3,d9
00004e  ec510b1a          VMOV     r0,r1,d10
000052  f7fffffe          BL       __aeabi_cdcmple
000056  d20f              BCS      |L2.120|
;;;14     				PID_Handler->I_Sum=PID_Handler->I_Sum+(float)0.5*(float)(Error+PID_Handler->User-PID_Handler->Collect[1]);  //梯形积分
000058  ed940a07          VLDR     s0,[r4,#0x1c]
00005c  ee300a08          VADD.F32 s0,s0,s16
000060  edd40a05          VLDR     s1,[r4,#0x14]
000064  ee700a60          VSUB.F32 s1,s0,s1
000068  ed940a06          VLDR     s0,[r4,#0x18]
00006c  eeb61a00          VMOV.F32 s2,#0.50000000
000070  ee010a20          VMLA.F32 s0,s2,s1
000074  ed840a06          VSTR     s0,[r4,#0x18]
                  |L2.120|
;;;15     			PID_Handler->Result = (PID_Handler->Kp)*Error
000078  ed940a01          VLDR     s0,[r4,#4]
00007c  edd40a06          VLDR     s1,[r4,#0x18]
000080  ee200a20          VMUL.F32 s0,s0,s1
000084  edd40a00          VLDR     s1,[r4,#0]
000088  ee000a88          VMLA.F32 s0,s1,s16
00008c  edd40a07          VLDR     s1,[r4,#0x1c]
000090  ee700a88          VADD.F32 s1,s1,s16
000094  ed941a05          VLDR     s2,[r4,#0x14]
000098  ee700ac1          VSUB.F32 s1,s1,s2
00009c  ed941a02          VLDR     s2,[r4,#8]
0000a0  ee010a20          VMLA.F32 s0,s2,s1
0000a4  edd40a03          VLDR     s1,[r4,#0xc]
0000a8  ee300a20          VADD.F32 s0,s0,s1
0000ac  ed840a08          VSTR     s0,[r4,#0x20]
;;;16     														+ (PID_Handler->Ki * PID_Handler->I_Sum)
;;;17     														+ (PID_Handler->Kd * (Error + PID_Handler->User-PID_Handler->Collect[1]))
;;;18     														+ (PID_Handler->Offset);
;;;19     			return PID_Handler->Result;
0000b0  ed940a08          VLDR     s0,[r4,#0x20]
;;;20     }
0000b4  ecbd8b08          VPOP     {d8-d11}
0000b8  bd10              POP      {r4,pc}
;;;21     void PID_Calculate(void* pvParameters)
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  PID1
                          %        40
                  PID2
                          %        40
                  PID3
                          %        40
                  PID4
                          %        40
                  PID5
                          %        40
                  PID6
                          %        40
                  PID7
                          %        40
                  PID8
                          %        40

;*** Start embedded assembler ***

#line 1 "App\\PID.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_PID_c_269a37f4____REV16|
#line 388 ".\\CORE\\cmsis_armcc.h"
|__asm___5_PID_c_269a37f4____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_PID_c_269a37f4____REVSH|
#line 402
|__asm___5_PID_c_269a37f4____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_PID_c_269a37f4____RRX|
#line 587
|__asm___5_PID_c_269a37f4____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
