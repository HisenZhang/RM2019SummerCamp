; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\iic2.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\iic2.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\CORE -I.\USER -I.\HALLIB\STM32F4xx_HAL_Driver\Inc -I.\SYSTEM -I.\Hardware -I.\App -I.\DSP_LIB\Include -I.\FATFS -I.\FreeRTOS -I.\DMP -I.\DMP\eMPL -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=526 -DSTM32F427xx -DSTM32F4 -DUSE_HAL_DRIVER -DSTM32F427xx -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=.\obj\iic2.crf Hardware\IIC2.c]
                          THUMB

                          AREA ||i.IIC2_Ack||, CODE, READONLY, ALIGN=2

                  IIC2_Ack PROC
;;;58     //产生ACK应答
;;;59     void IIC2_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;60     {
;;;61     	IIC2_SCL=0;
000002  2000              MOVS     r0,#0
000004  490f              LDR      r1,|L1.68|
000006  6008              STR      r0,[r1,#0]
;;;62     	SDA2_OUT();
000008  480f              LDR      r0,|L1.72|
00000a  6800              LDR      r0,[r0,#0]
00000c  f0200003          BIC      r0,r0,#3
000010  490d              LDR      r1,|L1.72|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f0400001          ORR      r0,r0,#1
00001c  6008              STR      r0,[r1,#0]
;;;63     	IIC2_SDA=0;
00001e  2000              MOVS     r0,#0
000020  490a              LDR      r1,|L1.76|
000022  f8c10280          STR      r0,[r1,#0x280]
;;;64     	Delayus(2);
000026  2002              MOVS     r0,#2
000028  f7fffffe          BL       Delayus
;;;65     	IIC2_SCL=1;
00002c  2001              MOVS     r0,#1
00002e  4905              LDR      r1,|L1.68|
000030  6008              STR      r0,[r1,#0]
;;;66     	Delayus(2);
000032  2002              MOVS     r0,#2
000034  f7fffffe          BL       Delayus
;;;67     	IIC2_SCL=0;
000038  2000              MOVS     r0,#0
00003a  4904              LDR      r1,|L1.76|
00003c  f8c10284          STR      r0,[r1,#0x284]
;;;68     }
000040  bd10              POP      {r4,pc}
;;;69     //不产生ACK应答		    
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
                          DCD      0x42428284
                  |L1.72|
                          DCD      0x40021400
                  |L1.76|
                          DCD      0x42428000

                          AREA ||i.IIC2_Init||, CODE, READONLY, ALIGN=2

                  IIC2_Init PROC
;;;36     #endif
;;;2      void IIC2_Init(void)
000000  b500              PUSH     {lr}
;;;3      {
000002  b087              SUB      sp,sp,#0x1c
;;;4          GPIO_InitTypeDef GPIO_Initure;
;;;5          __HAL_RCC_GPIOF_CLK_ENABLE();
000004  bf00              NOP      
000006  2000              MOVS     r0,#0
000008  9001              STR      r0,[sp,#4]
00000a  4810              LDR      r0,|L2.76|
00000c  6800              LDR      r0,[r0,#0]
00000e  f0400020          ORR      r0,r0,#0x20
000012  490e              LDR      r1,|L2.76|
000014  6008              STR      r0,[r1,#0]
000016  4608              MOV      r0,r1
000018  6800              LDR      r0,[r0,#0]
00001a  f0000020          AND      r0,r0,#0x20
00001e  9001              STR      r0,[sp,#4]
000020  bf00              NOP      
000022  bf00              NOP      
;;;6          GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1;
000024  2003              MOVS     r0,#3
000026  9002              STR      r0,[sp,#8]
;;;7          GPIO_Initure.Mode=GPIO_MODE_OUTPUT_PP;  //推挽输出
000028  2001              MOVS     r0,#1
00002a  9003              STR      r0,[sp,#0xc]
;;;8          GPIO_Initure.Pull=GPIO_PULLUP;          //上拉
00002c  9004              STR      r0,[sp,#0x10]
;;;9          GPIO_Initure.Speed=GPIO_SPEED_FAST;     //快速
00002e  2002              MOVS     r0,#2
000030  9005              STR      r0,[sp,#0x14]
;;;10         HAL_GPIO_Init(GPIOF,&GPIO_Initure);
000032  a902              ADD      r1,sp,#8
000034  4806              LDR      r0,|L2.80|
000036  f7fffffe          BL       HAL_GPIO_Init
;;;11         IIC2_SDA=1;
00003a  2001              MOVS     r0,#1
00003c  4905              LDR      r1,|L2.84|
00003e  6008              STR      r0,[r1,#0]
;;;12         IIC2_SCL=1;  
000040  4905              LDR      r1,|L2.88|
000042  f8c10284          STR      r0,[r1,#0x284]
;;;13     }
000046  b007              ADD      sp,sp,#0x1c
000048  bd00              POP      {pc}
;;;14     
                          ENDP

00004a  0000              DCW      0x0000
                  |L2.76|
                          DCD      0x40023830
                  |L2.80|
                          DCD      0x40021400
                  |L2.84|
                          DCD      0x42428280
                  |L2.88|
                          DCD      0x42428000

                          AREA ||i.IIC2_NAck||, CODE, READONLY, ALIGN=2

                  IIC2_NAck PROC
;;;69     //不产生ACK应答		    
;;;70     void IIC2_NAck(void)
000000  b510              PUSH     {r4,lr}
;;;71     {
;;;72     	IIC2_SCL=0;
000002  2000              MOVS     r0,#0
000004  490f              LDR      r1,|L3.68|
000006  6008              STR      r0,[r1,#0]
;;;73     	SDA2_OUT();
000008  480f              LDR      r0,|L3.72|
00000a  6800              LDR      r0,[r0,#0]
00000c  f0200003          BIC      r0,r0,#3
000010  490d              LDR      r1,|L3.72|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f0400001          ORR      r0,r0,#1
00001c  6008              STR      r0,[r1,#0]
;;;74     	IIC2_SDA=1;
00001e  2001              MOVS     r0,#1
000020  490a              LDR      r1,|L3.76|
000022  f8c10280          STR      r0,[r1,#0x280]
;;;75     	Delayus(2);
000026  2002              MOVS     r0,#2
000028  f7fffffe          BL       Delayus
;;;76     	IIC2_SCL=1;
00002c  2001              MOVS     r0,#1
00002e  4905              LDR      r1,|L3.68|
000030  6008              STR      r0,[r1,#0]
;;;77     	Delayus(2);
000032  2002              MOVS     r0,#2
000034  f7fffffe          BL       Delayus
;;;78     	IIC2_SCL=0;
000038  2000              MOVS     r0,#0
00003a  4904              LDR      r1,|L3.76|
00003c  f8c10284          STR      r0,[r1,#0x284]
;;;79     }					 				     
000040  bd10              POP      {r4,pc}
;;;80     //IIC发送一个字节
                          ENDP

000042  0000              DCW      0x0000
                  |L3.68|
                          DCD      0x42428284
                  |L3.72|
                          DCD      0x40021400
                  |L3.76|
                          DCD      0x42428000

                          AREA ||i.IIC2_Read_Byte||, CODE, READONLY, ALIGN=2

                  IIC2_Read_Byte PROC
;;;100    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
;;;101    u8 IIC2_Read_Byte(unsigned char ack)
000000  b570              PUSH     {r4-r6,lr}
;;;102    {
000002  4605              MOV      r5,r0
;;;103    		unsigned char i,receive=0;
000004  2400              MOVS     r4,#0
;;;104    		SDA2_IN();//SDA设置为输入
000006  4816              LDR      r0,|L4.96|
000008  6800              LDR      r0,[r0,#0]
00000a  f0200003          BIC      r0,r0,#3
00000e  4914              LDR      r1,|L4.96|
000010  6008              STR      r0,[r1,#0]
000012  4608              MOV      r0,r1
000014  6800              LDR      r0,[r0,#0]
000016  6008              STR      r0,[r1,#0]
;;;105        for(i=0;i<8;i++ )
000018  2600              MOVS     r6,#0
00001a  e016              B        |L4.74|
                  |L4.28|
;;;106    		{
;;;107            IIC2_SCL=0; 
00001c  2000              MOVS     r0,#0
00001e  4911              LDR      r1,|L4.100|
000020  6008              STR      r0,[r1,#0]
;;;108            Delayus(2);
000022  2002              MOVS     r0,#2
000024  f7fffffe          BL       Delayus
;;;109    				IIC2_SCL=1;
000028  2001              MOVS     r0,#1
00002a  490f              LDR      r1,|L4.104|
00002c  f8c10284          STR      r0,[r1,#0x284]
;;;110            receive<<=1;
000030  0660              LSLS     r0,r4,#25
000032  0e04              LSRS     r4,r0,#24
;;;111            if(READ_SDA2)
000034  480b              LDR      r0,|L4.100|
000036  3884              SUBS     r0,r0,#0x84
000038  6800              LDR      r0,[r0,#0]
00003a  b108              CBZ      r0,|L4.64|
;;;112    					receive++;   
00003c  1c60              ADDS     r0,r4,#1
00003e  b2c4              UXTB     r4,r0
                  |L4.64|
;;;113    				Delayus(1); 
000040  2001              MOVS     r0,#1
000042  f7fffffe          BL       Delayus
000046  1c70              ADDS     r0,r6,#1              ;105
000048  b2c6              UXTB     r6,r0                 ;105
                  |L4.74|
00004a  2e08              CMP      r6,#8                 ;105
00004c  dbe6              BLT      |L4.28|
;;;114        }					 
;;;115        if (!ack)
00004e  b915              CBNZ     r5,|L4.86|
;;;116            IIC2_NAck();//发送nACK
000050  f7fffffe          BL       IIC2_NAck
000054  e001              B        |L4.90|
                  |L4.86|
;;;117        else
;;;118            IIC2_Ack(); //发送ACK   
000056  f7fffffe          BL       IIC2_Ack
                  |L4.90|
;;;119        return receive;
00005a  4620              MOV      r0,r4
;;;120    }
00005c  bd70              POP      {r4-r6,pc}
                          ENDP

00005e  0000              DCW      0x0000
                  |L4.96|
                          DCD      0x40021400
                  |L4.100|
                          DCD      0x42428284
                  |L4.104|
                          DCD      0x42428000

                          AREA ||i.IIC2_Send_Byte||, CODE, READONLY, ALIGN=2

                  IIC2_Send_Byte PROC
;;;83     //0，无应答			  
;;;84     void IIC2_Send_Byte(u8 txd)
000000  b570              PUSH     {r4-r6,lr}
;;;85     {              
000002  4604              MOV      r4,r0
;;;86         u8 t;   
;;;87     		SDA2_OUT(); 	    
000004  4815              LDR      r0,|L5.92|
000006  6800              LDR      r0,[r0,#0]
000008  f0200003          BIC      r0,r0,#3
00000c  4913              LDR      r1,|L5.92|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  f0400001          ORR      r0,r0,#1
000018  6008              STR      r0,[r1,#0]
;;;88         IIC2_SCL=0;//拉低时钟开始数据传输
00001a  2000              MOVS     r0,#0
00001c  4910              LDR      r1,|L5.96|
00001e  6008              STR      r0,[r1,#0]
;;;89         for(t=0;t<8;t++)
000020  2500              MOVS     r5,#0
000022  e017              B        |L5.84|
                  |L5.36|
;;;90         {              
;;;91             IIC2_SDA=(txd&0x80)>>7;
000024  09e0              LSRS     r0,r4,#7
000026  490e              LDR      r1,|L5.96|
000028  1f09              SUBS     r1,r1,#4
00002a  6008              STR      r0,[r1,#0]
;;;92             txd<<=1; 	  
00002c  0660              LSLS     r0,r4,#25
00002e  0e04              LSRS     r4,r0,#24
;;;93     				Delayus(2);   //对TEA5767这三个延时都是必须的
000030  2002              MOVS     r0,#2
000032  f7fffffe          BL       Delayus
;;;94     				IIC2_SCL=1;
000036  2001              MOVS     r0,#1
000038  490a              LDR      r1,|L5.100|
00003a  f8c10284          STR      r0,[r1,#0x284]
;;;95     				Delayus(2); 
00003e  2002              MOVS     r0,#2
000040  f7fffffe          BL       Delayus
;;;96     				IIC2_SCL=0;	
000044  2000              MOVS     r0,#0
000046  4906              LDR      r1,|L5.96|
000048  6008              STR      r0,[r1,#0]
;;;97     				Delayus(2);
00004a  2002              MOVS     r0,#2
00004c  f7fffffe          BL       Delayus
000050  1c68              ADDS     r0,r5,#1              ;89
000052  b2c5              UXTB     r5,r0                 ;89
                  |L5.84|
000054  2d08              CMP      r5,#8                 ;89
000056  dbe5              BLT      |L5.36|
;;;98         }	 
;;;99     } 	    
000058  bd70              POP      {r4-r6,pc}
;;;100    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
                          ENDP

00005a  0000              DCW      0x0000
                  |L5.92|
                          DCD      0x40021400
                  |L5.96|
                          DCD      0x42428284
                  |L5.100|
                          DCD      0x42428000

                          AREA ||i.IIC2_Start||, CODE, READONLY, ALIGN=2

                  IIC2_Start PROC
;;;15     //产生IIC起始信号
;;;16     void IIC2_Start(void)
000000  b510              PUSH     {r4,lr}
;;;17     {
;;;18     	SDA2_OUT();     //sda线输出
000002  480f              LDR      r0,|L6.64|
000004  6800              LDR      r0,[r0,#0]
000006  f0200003          BIC      r0,r0,#3
00000a  490d              LDR      r1,|L6.64|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f0400001          ORR      r0,r0,#1
000016  6008              STR      r0,[r1,#0]
;;;19     	IIC2_SDA=1;	  	  
000018  2001              MOVS     r0,#1
00001a  490a              LDR      r1,|L6.68|
00001c  6008              STR      r0,[r1,#0]
;;;20     	IIC2_SCL=1;
00001e  490a              LDR      r1,|L6.72|
000020  f8c10284          STR      r0,[r1,#0x284]
;;;21     	Delayus(4);
000024  2004              MOVS     r0,#4
000026  f7fffffe          BL       Delayus
;;;22      	IIC2_SDA=0;//START:when CLK is high,DATA change form high to low 
00002a  2000              MOVS     r0,#0
00002c  4905              LDR      r1,|L6.68|
00002e  6008              STR      r0,[r1,#0]
;;;23     	Delayus(4);
000030  2004              MOVS     r0,#4
000032  f7fffffe          BL       Delayus
;;;24     	IIC2_SCL=0;//钳住I2C总线，准备发送或接收数据 
000036  2000              MOVS     r0,#0
000038  4903              LDR      r1,|L6.72|
00003a  f8c10284          STR      r0,[r1,#0x284]
;;;25     }	  
00003e  bd10              POP      {r4,pc}
;;;26     //产生IIC停止信号
                          ENDP

                  |L6.64|
                          DCD      0x40021400
                  |L6.68|
                          DCD      0x42428280
                  |L6.72|
                          DCD      0x42428000

                          AREA ||i.IIC2_Stop||, CODE, READONLY, ALIGN=2

                  IIC2_Stop PROC
;;;26     //产生IIC停止信号
;;;27     void IIC2_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;28     {
;;;29     	SDA2_OUT();//sda线输出
000002  480f              LDR      r0,|L7.64|
000004  6800              LDR      r0,[r0,#0]
000006  f0200003          BIC      r0,r0,#3
00000a  490d              LDR      r1,|L7.64|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f0400001          ORR      r0,r0,#1
000016  6008              STR      r0,[r1,#0]
;;;30     	IIC2_SCL=0;
000018  2000              MOVS     r0,#0
00001a  490a              LDR      r1,|L7.68|
00001c  6008              STR      r0,[r1,#0]
;;;31     	IIC2_SDA=0;//STOP:when CLK is high DATA change form low to high
00001e  490a              LDR      r1,|L7.72|
000020  f8c10280          STR      r0,[r1,#0x280]
;;;32      	Delayus(4);
000024  2004              MOVS     r0,#4
000026  f7fffffe          BL       Delayus
;;;33     	IIC2_SCL=1; 
00002a  2001              MOVS     r0,#1
00002c  4905              LDR      r1,|L7.68|
00002e  6008              STR      r0,[r1,#0]
;;;34     	Delayus(4);			
000030  2004              MOVS     r0,#4
000032  f7fffffe          BL       Delayus
;;;35     	IIC2_SDA=1;//发送I2C总线结束信号				   	
000036  2001              MOVS     r0,#1
000038  4903              LDR      r1,|L7.72|
00003a  f8c10280          STR      r0,[r1,#0x280]
;;;36     }
00003e  bd10              POP      {r4,pc}
;;;37     //等待应答信号到来
                          ENDP

                  |L7.64|
                          DCD      0x40021400
                  |L7.68|
                          DCD      0x42428284
                  |L7.72|
                          DCD      0x42428000

                          AREA ||i.IIC2_Wait_Ack||, CODE, READONLY, ALIGN=2

                  IIC2_Wait_Ack PROC
;;;39     //        0，接收应答成功
;;;40     u8 IIC2_Wait_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;41     {
;;;42     	u8 ucErrTime=0;
000002  2400              MOVS     r4,#0
;;;43     	SDA2_IN();      //SDA设置为输入  
000004  4813              LDR      r0,|L8.84|
000006  6800              LDR      r0,[r0,#0]
000008  f0200003          BIC      r0,r0,#3
00000c  4911              LDR      r1,|L8.84|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  6008              STR      r0,[r1,#0]
;;;44     	IIC2_SDA=1;Delayus(1);	   
000016  2001              MOVS     r0,#1
000018  490f              LDR      r1,|L8.88|
00001a  6008              STR      r0,[r1,#0]
00001c  f7fffffe          BL       Delayus
;;;45     	IIC2_SCL=1;Delayus(1);	 
000020  2001              MOVS     r0,#1
000022  490e              LDR      r1,|L8.92|
000024  f8c10284          STR      r0,[r1,#0x284]
000028  f7fffffe          BL       Delayus
;;;46     	while(READ_SDA2)
00002c  e007              B        |L8.62|
                  |L8.46|
;;;47     	{
;;;48     		ucErrTime++;
00002e  1c60              ADDS     r0,r4,#1
000030  b2c4              UXTB     r4,r0
;;;49     		if(ucErrTime>250)
000032  2cfa              CMP      r4,#0xfa
000034  dd03              BLE      |L8.62|
;;;50     		{
;;;51     			IIC2_Stop();
000036  f7fffffe          BL       IIC2_Stop
;;;52     			return 1;
00003a  2001              MOVS     r0,#1
                  |L8.60|
;;;53     		}
;;;54     	}
;;;55     	IIC2_SCL=0;//时钟输出0 	   
;;;56     	return 0;  
;;;57     } 
00003c  bd10              POP      {r4,pc}
                  |L8.62|
00003e  4806              LDR      r0,|L8.88|
000040  3880              SUBS     r0,r0,#0x80           ;46
000042  6800              LDR      r0,[r0,#0]            ;46
000044  2800              CMP      r0,#0                 ;46
000046  d1f2              BNE      |L8.46|
000048  4903              LDR      r1,|L8.88|
00004a  1d09              ADDS     r1,r1,#4              ;55
00004c  6008              STR      r0,[r1,#0]            ;55
00004e  bf00              NOP                            ;56
000050  e7f4              B        |L8.60|
;;;58     //产生ACK应答
                          ENDP

000052  0000              DCW      0x0000
                  |L8.84|
                          DCD      0x40021400
                  |L8.88|
                          DCD      0x42428280
                  |L8.92|
                          DCD      0x42428000

;*** Start embedded assembler ***

#line 1 "Hardware\\IIC2.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_IIC2_c_63fa7d3a____REV16|
#line 388 ".\\CORE\\cmsis_armcc.h"
|__asm___6_IIC2_c_63fa7d3a____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_IIC2_c_63fa7d3a____REVSH|
#line 402
|__asm___6_IIC2_c_63fa7d3a____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_IIC2_c_63fa7d3a____RRX|
#line 587
|__asm___6_IIC2_c_63fa7d3a____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
