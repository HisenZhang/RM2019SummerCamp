; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\tasks.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\tasks.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\CORE -I.\USER -I.\HALLIB\STM32F4xx_HAL_Driver\Inc -I.\SYSTEM -I.\Hardware -I.\App -I.\DSP_LIB\Include -I.\FATFS -I.\FreeRTOS -I.\DMP -I.\DMP\eMPL -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=526 -DSTM32F427xx -DSTM32F4 -DUSE_HAL_DRIVER -DSTM32F427xx -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING --omf_browse=.\obj\tasks.crf App\Tasks.c]
                          THUMB

                          AREA ||i.PID_Init||, CODE, READONLY, ALIGN=2

                  PID_Init PROC
;;;12     }
;;;13     void PID_Init(void)         //初始化PID值
000000  eeb60a00          VMOV.F32 s0,#0.50000000
;;;14     {
;;;15     	PID1.Kp=0.5;
000004  4821              LDR      r0,|L1.140|
000006  ed800a00          VSTR     s0,[r0,#0]
;;;16     	PID1.Ki=0.005;
00000a  ed9f0a21          VLDR     s0,|L1.144|
00000e  ed800a01          VSTR     s0,[r0,#4]
;;;17     	PID1.Kd=0;
000012  ed9f0a20          VLDR     s0,|L1.148|
000016  ed800a02          VSTR     s0,[r0,#8]
;;;18     	PID1.I_Limit = 3000;
00001a  ed9f0a1f          VLDR     s0,|L1.152|
00001e  ed800a09          VSTR     s0,[r0,#0x24]
;;;19     	
;;;20     	PID2.Kp=0.5;
000022  eeb60a00          VMOV.F32 s0,#0.50000000
000026  481d              LDR      r0,|L1.156|
000028  ed800a00          VSTR     s0,[r0,#0]
;;;21     	PID2.Ki=0.005;
00002c  ed9f0a18          VLDR     s0,|L1.144|
000030  ed800a01          VSTR     s0,[r0,#4]
;;;22     	PID2.Kd=0;
000034  ed9f0a17          VLDR     s0,|L1.148|
000038  ed800a02          VSTR     s0,[r0,#8]
;;;23     	PID2.I_Limit = 3000;
00003c  ed9f0a16          VLDR     s0,|L1.152|
000040  ed800a09          VSTR     s0,[r0,#0x24]
;;;24     	
;;;25     	PID3.Kp=0.5;
000044  eeb60a00          VMOV.F32 s0,#0.50000000
000048  4815              LDR      r0,|L1.160|
00004a  ed800a00          VSTR     s0,[r0,#0]
;;;26     	PID3.Ki=0.005;
00004e  ed9f0a10          VLDR     s0,|L1.144|
000052  ed800a01          VSTR     s0,[r0,#4]
;;;27     	PID3.Kd=0;
000056  ed9f0a0f          VLDR     s0,|L1.148|
00005a  ed800a02          VSTR     s0,[r0,#8]
;;;28     	PID3.I_Limit = 3000;
00005e  ed9f0a0e          VLDR     s0,|L1.152|
000062  ed800a09          VSTR     s0,[r0,#0x24]
;;;29     	
;;;30     	PID4.Kp=0.5;
000066  eeb60a00          VMOV.F32 s0,#0.50000000
00006a  480e              LDR      r0,|L1.164|
00006c  ed800a00          VSTR     s0,[r0,#0]
;;;31     	PID4.Ki=0.005;
000070  ed9f0a07          VLDR     s0,|L1.144|
000074  ed800a01          VSTR     s0,[r0,#4]
;;;32     	PID4.Kd=0;
000078  ed9f0a06          VLDR     s0,|L1.148|
00007c  ed800a02          VSTR     s0,[r0,#8]
;;;33     	PID4.I_Limit = 3000;
000080  ed9f0a05          VLDR     s0,|L1.152|
000084  ed800a09          VSTR     s0,[r0,#0x24]
;;;34     }
000088  4770              BX       lr
;;;35     void Remote_Control(void* pvParameters)              //周期处理遥控器接收值
                          ENDP

00008a  0000              DCW      0x0000
                  |L1.140|
                          DCD      PID1
                  |L1.144|
000090  3ba3d70a          DCFS     0x3ba3d70a ; 0.004999999888241291
                  |L1.148|
000094  00000000          DCFS     0x00000000 ; 0
                  |L1.152|
000098  453b8000          DCFS     0x453b8000 ; 3000
                  |L1.156|
                          DCD      PID2
                  |L1.160|
                          DCD      PID3
                  |L1.164|
                          DCD      PID4

                          AREA ||i.Remote_Control||, CODE, READONLY, ALIGN=2

                  Remote_Control PROC
;;;34     }
;;;35     void Remote_Control(void* pvParameters)              //周期处理遥控器接收值
000000  b51f              PUSH     {r0-r4,lr}
;;;36     {
;;;37     	float Wheel_Speed[4];
;;;38     	while(1)
000002  e04e              B        |L2.162|
                  |L2.4|
;;;39     	{
;;;40     		if(Remote.sw1==Left_L&&Remote.sw2==Right_L)
000004  4827              LDR      r0,|L2.164|
000006  7a00              LDRB     r0,[r0,#8]  ; Remote
000008  2802              CMP      r0,#2
00000a  d142              BNE      |L2.146|
00000c  4825              LDR      r0,|L2.164|
00000e  7a40              LDRB     r0,[r0,#9]  ; Remote
000010  2802              CMP      r0,#2
000012  d13e              BNE      |L2.146|
;;;41     		{
;;;42     				Speed_To_Wheel(Remote.ch1*10,Remote.ch2*10,Remote.ch3*10,Wheel_Speed);
000014  4823              LDR      r0,|L2.164|
000016  f9b00004          LDRSH    r0,[r0,#4]  ; Remote
00001a  eb000080          ADD      r0,r0,r0,LSL #2
00001e  0040              LSLS     r0,r0,#1
000020  ee010a90          VMOV     s3,r0
000024  eef81ae1          VCVT.F32.S32 s3,s3
000028  eeb01a61          VMOV.F32 s2,s3
00002c  481d              LDR      r0,|L2.164|
00002e  f9b00002          LDRSH    r0,[r0,#2]  ; Remote
000032  eb000080          ADD      r0,r0,r0,LSL #2
000036  0040              LSLS     r0,r0,#1
000038  ee010a90          VMOV     s3,r0
00003c  eef81ae1          VCVT.F32.S32 s3,s3
000040  eef00a61          VMOV.F32 s1,s3
000044  4817              LDR      r0,|L2.164|
000046  f9b00000          LDRSH    r0,[r0,#0]  ; Remote
00004a  eb000080          ADD      r0,r0,r0,LSL #2
00004e  0040              LSLS     r0,r0,#1
000050  ee010a90          VMOV     s3,r0
000054  eef81ae1          VCVT.F32.S32 s3,s3
000058  eeb00a61          VMOV.F32 s0,s3
00005c  4668              MOV      r0,sp
00005e  f7fffffe          BL       Speed_To_Wheel
;;;43     				PID1.User=Wheel_Speed[0];
000062  ed9d0a00          VLDR     s0,[sp,#0]
000066  4810              LDR      r0,|L2.168|
000068  ed800a07          VSTR     s0,[r0,#0x1c]
;;;44     				PID2.User=Wheel_Speed[1];
00006c  ed9d0a01          VLDR     s0,[sp,#4]
000070  480e              LDR      r0,|L2.172|
000072  ed800a07          VSTR     s0,[r0,#0x1c]
;;;45     				PID3.User=Wheel_Speed[2];
000076  ed9d0a02          VLDR     s0,[sp,#8]
00007a  480d              LDR      r0,|L2.176|
00007c  ed800a07          VSTR     s0,[r0,#0x1c]
;;;46     				PID4.User=Wheel_Speed[3];
000080  ed9d0a03          VLDR     s0,[sp,#0xc]
000084  480b              LDR      r0,|L2.180|
000086  ed800a07          VSTR     s0,[r0,#0x1c]
;;;47     				vTaskDelay(5);
00008a  2005              MOVS     r0,#5
00008c  f7fffffe          BL       vTaskDelay
000090  e004              B        |L2.156|
                  |L2.146|
;;;48     		}
;;;49     		else
;;;50     			PID1.User=0;
000092  ed9f0a09          VLDR     s0,|L2.184|
000096  4804              LDR      r0,|L2.168|
000098  ed800a07          VSTR     s0,[r0,#0x1c]
                  |L2.156|
;;;51     		vTaskDelay(1);
00009c  2001              MOVS     r0,#1
00009e  f7fffffe          BL       vTaskDelay
                  |L2.162|
0000a2  e7af              B        |L2.4|
;;;52     	}
;;;53     }
                          ENDP

                  |L2.164|
                          DCD      Remote
                  |L2.168|
                          DCD      PID1
                  |L2.172|
                          DCD      PID2
                  |L2.176|
                          DCD      PID3
                  |L2.180|
                          DCD      PID4
                  |L2.184|
0000b8  00000000          DCFS     0x00000000 ; 0

                          AREA ||i.Renew_PID||, CODE, READONLY, ALIGN=2

                  Renew_PID PROC
;;;36     #endif
;;;2      void Renew_PID(void)         //更新PID值
000000  481e              LDR      r0,|L3.124|
;;;3      {
;;;4      	PID1.Collect[1]=PID1.Collect[0];
000002  ed900a04          VLDR     s0,[r0,#0x10]
000006  ed800a05          VSTR     s0,[r0,#0x14]
;;;5      	PID1.Collect[0]=moto_chassis[0].speed_rpm;
00000a  481d              LDR      r0,|L3.128|
00000c  f9b00000          LDRSH    r0,[r0,#0]  ; moto_chassis
000010  ee000a10          VMOV     s0,r0
000014  eeb80ac0          VCVT.F32.S32 s0,s0
000018  4818              LDR      r0,|L3.124|
00001a  ed800a04          VSTR     s0,[r0,#0x10]
;;;6      	PID2.Collect[1]=PID2.Collect[0];
00001e  4819              LDR      r0,|L3.132|
000020  ed900a04          VLDR     s0,[r0,#0x10]
000024  ed800a05          VSTR     s0,[r0,#0x14]
;;;7      	PID2.Collect[0]=moto_chassis[1].speed_rpm;
000028  4815              LDR      r0,|L3.128|
00002a  f9b0002c          LDRSH    r0,[r0,#0x2c]  ; moto_chassis
00002e  ee000a10          VMOV     s0,r0
000032  eeb80ac0          VCVT.F32.S32 s0,s0
000036  4813              LDR      r0,|L3.132|
000038  ed800a04          VSTR     s0,[r0,#0x10]
;;;8      	PID3.Collect[1]=PID3.Collect[0];
00003c  4812              LDR      r0,|L3.136|
00003e  ed900a04          VLDR     s0,[r0,#0x10]
000042  ed800a05          VSTR     s0,[r0,#0x14]
;;;9      	PID3.Collect[0]=moto_chassis[2].speed_rpm;
000046  480e              LDR      r0,|L3.128|
000048  f9b00058          LDRSH    r0,[r0,#0x58]  ; moto_chassis
00004c  ee000a10          VMOV     s0,r0
000050  eeb80ac0          VCVT.F32.S32 s0,s0
000054  480c              LDR      r0,|L3.136|
000056  ed800a04          VSTR     s0,[r0,#0x10]
;;;10     	PID4.Collect[1]=PID4.Collect[0];
00005a  480c              LDR      r0,|L3.140|
00005c  ed900a04          VLDR     s0,[r0,#0x10]
000060  ed800a05          VSTR     s0,[r0,#0x14]
;;;11     	PID4.Collect[0]=moto_chassis[3].speed_rpm;
000064  4806              LDR      r0,|L3.128|
000066  f9b00084          LDRSH    r0,[r0,#0x84]  ; moto_chassis
00006a  ee000a10          VMOV     s0,r0
00006e  eeb80ac0          VCVT.F32.S32 s0,s0
000072  4806              LDR      r0,|L3.140|
000074  ed800a04          VSTR     s0,[r0,#0x10]
;;;12     }
000078  4770              BX       lr
;;;13     void PID_Init(void)         //初始化PID值
                          ENDP

00007a  0000              DCW      0x0000
                  |L3.124|
                          DCD      PID1
                  |L3.128|
                          DCD      moto_chassis
                  |L3.132|
                          DCD      PID2
                  |L3.136|
                          DCD      PID3
                  |L3.140|
                          DCD      PID4

;*** Start embedded assembler ***

#line 1 "App\\Tasks.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_Tasks_c_453c068e____REV16|
#line 388 ".\\CORE\\cmsis_armcc.h"
|__asm___7_Tasks_c_453c068e____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_Tasks_c_453c068e____REVSH|
#line 402
|__asm___7_Tasks_c_453c068e____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_Tasks_c_453c068e____RRX|
#line 587
|__asm___7_Tasks_c_453c068e____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
